// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.2 effective-5.10 (swiftlang-6.2.0.19.9 clang-1700.3.19.1)
// swift-module-flags: -target arm64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name UnixSignals
// swift-module-flags-ignorable: -no-verify-emitted-module-interface -formal-cxx-interoperability-mode=off -interface-compiler-version 6.2
import ConcurrencyHelpers
import Darwin
import Dispatch
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct UnixSignal : Swift.Hashable, Swift.Sendable, Swift.CustomStringConvertible {
  public var rawValue: Swift.Int32 {
    get
  }
  public var description: Swift.String {
    get
  }
  public static let sigabrt: UnixSignals.UnixSignal
  public static let sighup: UnixSignals.UnixSignal
  public static let sigill: UnixSignals.UnixSignal
  public static let sigint: UnixSignals.UnixSignal
  public static let sigquit: UnixSignals.UnixSignal
  public static let sigsegv: UnixSignals.UnixSignal
  public static let sigterm: UnixSignals.UnixSignal
  public static let sigusr1: UnixSignals.UnixSignal
  public static let sigusr2: UnixSignals.UnixSignal
  public static let sigalrm: UnixSignals.UnixSignal
  public static let sigwinch: UnixSignals.UnixSignal
  public static let sigcont: UnixSignals.UnixSignal
  public static func == (a: UnixSignals.UnixSignal, b: UnixSignals.UnixSignal) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
public struct UnixSignalsSequence : _Concurrency.AsyncSequence, Swift.Sendable {
  public typealias Element = UnixSignals.UnixSignal
  public init(trapping signals: UnixSignals.UnixSignal...) async
  public init(trapping signals: [UnixSignals.UnixSignal]) async
  public func makeAsyncIterator() -> UnixSignals.UnixSignalsSequence.AsyncIterator
  public struct AsyncIterator : _Concurrency.AsyncIteratorProtocol {
    #if compiler(>=5.3) && $NonescapableTypes
    public mutating func next() async -> UnixSignals.UnixSignal?
    #endif
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    public typealias Element = UnixSignals.UnixSignal
    @available(iOS 18.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, macOS 15.0, *)
    @_implements(_Concurrency.AsyncIteratorProtocol, Failure) public typealias __AsyncIteratorProtocol_Failure = Swift.Never
  }
  @available(iOS 18.0, tvOS 18.0, watchOS 11.0, visionOS 2.0, macOS 15.0, *)
  @_implements(_Concurrency.AsyncSequence, Failure) public typealias __AsyncSequence_Failure = Swift.Never
}
