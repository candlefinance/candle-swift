// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.2 effective-5.10 (swiftlang-6.2.0.19.9 clang-1700.3.19.1)
// swift-module-flags: -target x86_64-apple-macos10.13 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name ConcurrencyHelpers
// swift-module-flags-ignorable: -no-verify-emitted-module-interface -formal-cxx-interoperability-mode=off -interface-compiler-version 6.2
import Darwin
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct Lock {
  public init()
  public func lock()
  public func unlock()
}
extension ConcurrencyHelpers.Lock {
  public func withLock<T>(_ body: () throws -> T) rethrows -> T
  public func withLockVoid(_ body: () throws -> Swift.Void) rethrows
}
extension ConcurrencyHelpers.Lock : @unchecked Swift.Sendable {
}
public struct LockedValueBox<Value> {
  public init(_ value: Value)
  public func withLockedValue<T>(_ mutate: (inout Value) throws -> T) rethrows -> T
}
extension ConcurrencyHelpers.LockedValueBox : @unchecked Swift.Sendable where Value : Swift.Sendable {
}
